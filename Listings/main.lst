


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             |.text|, CODE, READONLY
    2 00000000         
    3 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108
    4 00000000         
    5 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000
    6 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
    7 00000000         
    8 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x400
    9 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x500
   10 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x51C
   11 00000000 00000510 
                       GPIO_PUR
                               EQU              0x510
   12 00000000         
   13 00000000 00000030 
                       PORT45  EQU              0x30
   14 00000000 00000020 
                       PORT5   EQU              0x20
   15 00000000 00000010 
                       PORT4   EQU              0x10
   16 00000000         
   17 00000000 00000003 
                       PORT01  EQU              0x03
   18 00000000 00000001 
                       PORT0   EQU              0x01
   19 00000000 00000002 
                       PORT1   EQU              0x02
   20 00000000         
   21 00000000 00000000 
                       NOL2D   EQU              0x00
   22 00000000 00000010 
                       LED1    EQU              0x10
   23 00000000         
   24 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   25 00000000 003470EE 
                       DUREE_90
                               EQU              0x3470EE
   26 00000000 00400000 
                       DUREE_AVANCE_COURTE
                               EQU              0x00400000  ; Durée pour avanc
                                                            er légèrement
   27 00000000         
   28 00000000                 ENTRY
   29 00000000                 EXPORT           __main
   30 00000000                 IMPORT           MOTEUR_INIT
   31 00000000                 IMPORT           MOTEUR_DROIT_ON



ARM Macro Assembler    Page 2 


   32 00000000                 IMPORT           MOTEUR_DROIT_AVANT
   33 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE
   34 00000000                 IMPORT           MOTEUR_GAUCHE_ON
   35 00000000         
   36 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT
   37 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE
   38 00000000         ;VITESSE   EQU  0x82 ; Valeures plus petites => Vitesse 
                       plus rapide exemple 0x192
   39 00000000         ;DUREE_90            EQU     0x430EEE
   40 00000000         
   41 00000000         
   42 00000000         __main
   43 00000000 4E39            ldr              r6, = SYSCTL_PERIPH_GPIOF
   44 00000002 F04F 0038       mov              r0, #0x00000038
   45 00000006 6030            str              r0, [r6]
   46 00000008         
   47 00000008 BF00            nop
   48 0000000A BF00            nop
   49 0000000C BF00            nop
   50 0000000E         
   51 0000000E         ; Configuration des LED (Port F)
   52 0000000E 4E37            ldr              r6, = GPIO_PORTF_BASE + GPIO_O_
DIR
   53 00000010 F04F 0030       ldr              r0, = PORT45
   54 00000014 6030            str              r0, [r6]
   55 00000016         
   56 00000016 4E36            ldr              r6, = GPIO_PORTF_BASE + GPIO_O_
DEN
   57 00000018 F04F 0030       ldr              r0, = PORT45
   58 0000001C 6030            str              r0, [r6]
   59 0000001E         
   60 0000001E 4E35            ldr              r6, = GPIO_PORTF_BASE + GPIO_O_
DR2R
   61 00000020 F04F 0030       ldr              r0, = PORT45
   62 00000024 6030            str              r0, [r6]
   63 00000026         
   64 00000026         ; Initialisation des bumpers (Port E)
   65 00000026 4F34            ldr              r7, = GPIO_PORTE_BASE + GPIO_O_
DEN
   66 00000028 F04F 0003       ldr              r0, = PORT01
   67 0000002C 6038            str              r0, [r7]
   68 0000002E         ;pull up 
   69 0000002E 4F33            ldr              r7, = GPIO_PORTE_BASE + GPIO_PU
R
   70 00000030 F04F 0003       ldr              r0, = PORT01
   71 00000034 6038            str              r0, [r7]
   72 00000036         
   73 00000036         ; Initialisation des moteurs
   74 00000036 F7FF FFFE       BL               MOTEUR_INIT
   75 0000003A F7FF FFFE       BL               MOTEUR_DROIT_ON
   76 0000003E F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   77 00000042         
   78 00000042         ; Initialisation de l'état (0 = gauche, 1 = droite)
   79 00000042 F04F 0800       mov              r8, #0
   80 00000046         
   81 00000046         loop
   82 00000046         
   83 00000046         ;r7 voir si il et touche
   84 00000046         ; Lecture de l'état des bumpers mult decalage  



ARM Macro Assembler    Page 3 


   85 00000046 4F2E            ldr              r7, = GPIO_PORTE_BASE + (PORT0 
<< 2)
   86 00000048 683D            ldr              r5, [r7]    ; État du bumper d
                                                            roit
   87 0000004A         
   88 0000004A F8DF 90B8       ldr              r9, = GPIO_PORTE_BASE + (PORT1 
<< 2)
   89 0000004E F8D9 A000       ldr              r10, [r9]   ; État du bumper g
                                                            auche
   90 00000052         
   91 00000052         ; Vérifier les états et ajuster les moteurs/LED
   92 00000052 2D01            cmp              r5, #0x01   ; Bumper droit acti
                                                            vé ?
   93 00000054 D10B            bne              handle_bumper
   94 00000056         
   95 00000056 F1BA 0F02       cmp              r10, #0x02  ; Bumper gauche act
                                                            ivé ?
   96 0000005A D108            bne              handle_bumper
   97 0000005C         
   98 0000005C         ; Sinon, avancer tout droit
   99 0000005C F04F 0330       mov              r3, #PORT45
  100 00000060 4E29            ldr              r6, = GPIO_PORTF_BASE + (PORT45
 << 2)
  101 00000062 6033            str              r3, [r6]    ; Allume les LEDs
  102 00000064 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  103 00000068 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  104 0000006C E7EB            b                loop
  105 0000006E         
  106 0000006E         handle_bumper
  107 0000006E         ; Reculer brièvement
  108 0000006E F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  109 00000072 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  110 00000076 4825            ldr              r0, = DUREE ; Temporisation pou
                                                            r reculer
  111 00000078         delay1
  112 00000078 1E40            subs             r0, r0, #1
  113 0000007A D1FD            bne              delay1
  114 0000007C         
  115 0000007C         ; Décider la direction de la rotation pour 180° (zigza
                       g)
  116 0000007C F1B8 0F00       cmp              r8, #0
  117 00000080 D018            beq              turn_180_left
  118 00000082         
  119 00000082         turn_180_right
  120 00000082         ; Rotation 90° à droite
  121 00000082 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  122 00000086 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  123 0000008A 4821            ldr              r0, = DUREE_90
  124 0000008C         delay2
  125 0000008C 1E40            subs             r0, r0, #1
  126 0000008E D1FD            bne              delay2
  127 00000090         
  128 00000090         ; Avancer légèrement
  129 00000090 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  130 00000094 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  131 00000098 F44F 0080       ldr              r0, = DUREE_AVANCE_COURTE
  132 0000009C         delay3
  133 0000009C 1E40            subs             r0, r0, #1
  134 0000009E D1FD            bne              delay3



ARM Macro Assembler    Page 4 


  135 000000A0         
  136 000000A0         ; Rotation 90° à droite (complète 180°)
  137 000000A0 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  138 000000A4 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  139 000000A8 4819            ldr              r0, = DUREE_90
  140 000000AA         delay4
  141 000000AA 1E40            subs             r0, r0, #1
  142 000000AC D1FD            bne              delay4
  143 000000AE         
  144 000000AE         ; Mettre à jour l'état
  145 000000AE F04F 0800       mov              r8, #0
  146 000000B2 E017            b                continue
  147 000000B4         
  148 000000B4         turn_180_left
  149 000000B4         ; Rotation 90° à gauche
  150 000000B4 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  151 000000B8 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  152 000000BC 4814            ldr              r0, = DUREE_90
  153 000000BE         delay5
  154 000000BE 1E40            subs             r0, r0, #1
  155 000000C0 D1FD            bne              delay5
  156 000000C2         
  157 000000C2         ; Avancer légèrement
  158 000000C2 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  159 000000C6 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  160 000000CA F44F 0080       ldr              r0, = DUREE_AVANCE_COURTE
  161 000000CE         delay6
  162 000000CE 1E40            subs             r0, r0, #1
  163 000000D0 D1FD            bne              delay6
  164 000000D2         
  165 000000D2         ; Rotation 90° à gauche (complète 180°)
  166 000000D2 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  167 000000D6 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  168 000000DA 480D            ldr              r0, = DUREE_90
  169 000000DC         delay7
  170 000000DC 1E40            subs             r0, r0, #1
  171 000000DE D1FD            bne              delay7
  172 000000E0         
  173 000000E0         ; Mettre à jour l'état
  174 000000E0 F04F 0801       mov              r8, #1
  175 000000E4         
  176 000000E4         continue
  177 000000E4         ; Reprendre la boucle
  178 000000E4 E7AF            b                loop
  179 000000E6         
  180 000000E6 BF00            nop
  181 000000E8                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              4002451C 
              40024510 
              40024004 
              40024008 
              400250C0 
              002FFFFF 
              003470EE 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw



ARM Macro Assembler    Page 5 


ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\i
lyas\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\ilya
s\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine
="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION
 SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\list
ings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1 in file main.s
   Uses
      None
Comment: .text unused
__main 00000000

Symbol: __main
   Definitions
      At line 42 in file main.s
   Uses
      At line 29 in file main.s
Comment: __main used once
continue 000000E4

Symbol: continue
   Definitions
      At line 176 in file main.s
   Uses
      At line 146 in file main.s
Comment: continue used once
delay1 00000078

Symbol: delay1
   Definitions
      At line 111 in file main.s
   Uses
      At line 113 in file main.s
Comment: delay1 used once
delay2 0000008C

Symbol: delay2
   Definitions
      At line 124 in file main.s
   Uses
      At line 126 in file main.s
Comment: delay2 used once
delay3 0000009C

Symbol: delay3
   Definitions
      At line 132 in file main.s
   Uses
      At line 134 in file main.s
Comment: delay3 used once
delay4 000000AA

Symbol: delay4
   Definitions
      At line 140 in file main.s
   Uses
      At line 142 in file main.s
Comment: delay4 used once
delay5 000000BE

Symbol: delay5



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 153 in file main.s
   Uses
      At line 155 in file main.s
Comment: delay5 used once
delay6 000000CE

Symbol: delay6
   Definitions
      At line 161 in file main.s
   Uses
      At line 163 in file main.s
Comment: delay6 used once
delay7 000000DC

Symbol: delay7
   Definitions
      At line 169 in file main.s
   Uses
      At line 171 in file main.s
Comment: delay7 used once
handle_bumper 0000006E

Symbol: handle_bumper
   Definitions
      At line 106 in file main.s
   Uses
      At line 93 in file main.s
      At line 96 in file main.s

loop 00000046

Symbol: loop
   Definitions
      At line 81 in file main.s
   Uses
      At line 104 in file main.s
      At line 178 in file main.s

turn_180_left 000000B4

Symbol: turn_180_left
   Definitions
      At line 148 in file main.s
   Uses
      At line 117 in file main.s
Comment: turn_180_left used once
turn_180_right 00000082

Symbol: turn_180_right
   Definitions
      At line 119 in file main.s
   Uses
      None
Comment: turn_180_right unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 24 in file main.s
   Uses
      At line 110 in file main.s
Comment: DUREE used once
DUREE_90 003470EE

Symbol: DUREE_90
   Definitions
      At line 25 in file main.s
   Uses
      At line 123 in file main.s
      At line 139 in file main.s
      At line 152 in file main.s
      At line 168 in file main.s

DUREE_AVANCE_COURTE 00400000

Symbol: DUREE_AVANCE_COURTE
   Definitions
      At line 26 in file main.s
   Uses
      At line 131 in file main.s
      At line 160 in file main.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 10 in file main.s
   Uses
      At line 56 in file main.s
      At line 65 in file main.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 8 in file main.s
   Uses
      At line 52 in file main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 9 in file main.s
   Uses
      At line 60 in file main.s
Comment: GPIO_O_DR2R used once
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 6 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 65 in file main.s
      At line 69 in file main.s
      At line 85 in file main.s
      At line 88 in file main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 5 in file main.s
   Uses
      At line 52 in file main.s
      At line 56 in file main.s
      At line 60 in file main.s
      At line 100 in file main.s

GPIO_PUR 00000510

Symbol: GPIO_PUR
   Definitions
      At line 11 in file main.s
   Uses
      At line 69 in file main.s
Comment: GPIO_PUR used once
LED1 00000010

Symbol: LED1
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: LED1 unused
NOL2D 00000000

Symbol: NOL2D
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: NOL2D unused
PORT0 00000001

Symbol: PORT0
   Definitions
      At line 18 in file main.s
   Uses
      At line 85 in file main.s
Comment: PORT0 used once
PORT01 00000003

Symbol: PORT01
   Definitions
      At line 17 in file main.s
   Uses
      At line 66 in file main.s
      At line 70 in file main.s

PORT1 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: PORT1
   Definitions
      At line 19 in file main.s
   Uses
      At line 88 in file main.s
Comment: PORT1 used once
PORT4 00000010

Symbol: PORT4
   Definitions
      At line 15 in file main.s
   Uses
      None
Comment: PORT4 unused
PORT45 00000030

Symbol: PORT45
   Definitions
      At line 13 in file main.s
   Uses
      At line 53 in file main.s
      At line 57 in file main.s
      At line 61 in file main.s
      At line 99 in file main.s
      At line 100 in file main.s

PORT5 00000020

Symbol: PORT5
   Definitions
      At line 14 in file main.s
   Uses
      None
Comment: PORT5 unused
SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 3 in file main.s
   Uses
      At line 43 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 33 in file main.s
   Uses
      At line 108 in file main.s
      At line 121 in file main.s
      At line 137 in file main.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 32 in file main.s
   Uses
      At line 102 in file main.s
      At line 129 in file main.s
      At line 150 in file main.s
      At line 158 in file main.s
      At line 166 in file main.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 31 in file main.s
   Uses
      At line 75 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 37 in file main.s
   Uses
      At line 109 in file main.s
      At line 151 in file main.s
      At line 167 in file main.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 36 in file main.s
   Uses
      At line 103 in file main.s
      At line 122 in file main.s
      At line 130 in file main.s
      At line 138 in file main.s
      At line 159 in file main.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 34 in file main.s
   Uses
      At line 76 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 30 in file main.s
   Uses
      At line 74 in file main.s
Comment: MOTEUR_INIT used once
7 symbols
376 symbols in table
